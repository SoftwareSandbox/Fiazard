apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
group = 'be.swsb'
version = '0.0.1-SNAPSHOT'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

mainClassName = 'be.swsb.fiazard.main.FiazardApp'

// Most of this stuff I got from https://github.com/gini/dropwizard-gradle/blob/master/build.gradle

buildscript {
    repositories {
        mavenCentral()
    }
}

// Define project variables
project.ext {
    dropwizardVersion = '0.9.1'
    guavaVersion = '18.0'
    swaggerVersion = '1.5.4'
    junitVersion = '4.12'
    assertJVersion = '1.7.0'
    mongoDBJavaDriverVersion = '1.3'
    mongoJackVersion = '2.1.0'
    dropwizardMongoVersion = '2.0.0'
    jerseyClientVersion = '2.22.1'
    abderaVersion = '1.1.3'
}

repositories {
    mavenCentral()
    jcenter() // for dropwizard-mongo
    maven {
        url "https://github.com/SoftwareSandbox/maven-repo/raw/master"
    }
}

dependencies {
    // might need to exclude mongojacks jackson-databind
    // because it might conflict with dropwizards 2.3.3:
    // If this dependency is not add you will get a java.lang.Verify error upon execution.
    // This is due to dropwizard using 2.3.3 Jackson and mongojack attemtping to use
    // the 2.2.3 jackson-databind. Excluding the databing drom the monogjack and adding
    // the following dependency fixes the situation.
    compile(
            "org.apache.abdera:abdera-core:$abderaVersion",
            "org.apache.abdera:abdera-parser:$abderaVersion",
            "io.dropwizard:dropwizard-core:$dropwizardVersion",
            "io.dropwizard:dropwizard-auth:$dropwizardVersion",
            "io.dropwizard:dropwizard-migrations:$dropwizardVersion",
            "com.google.guava:guava:$guavaVersion",
            "org.apache.commons:commons-lang3:3.4",
            "com.commercehub.dropwizard:dropwizard-mongo:$dropwizardMongoVersion",
//            'com.sun.jersey:jersey-client:1.18.1',
            "be.swsb.atom-feed:atom-feed-core:0.0.1-SNAPSHOT",
            "org.glassfish.jersey.core:jersey-client:$jerseyClientVersion",
            "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyClientVersion",
            "org.jboss.resteasy:resteasy-atom-provider:3.0.11.Final"
    )
    compile("org.mongodb:mongo-java-driver:$mongoDBJavaDriverVersion")
        {
            exclude group: 'com.fasterxml.jackson.core', module:'jackson-databind'
        }
    compile("org.mongojack:mongojack:$mongoJackVersion")
        {
            exclude group: 'com.fasterxml.jackson.core', module:'jackson-databind'
        }
    compile("io.swagger:swagger-jaxrs:$swaggerVersion")
        {
            exclude group: 'javax.ws.rs', module: 'jsr311-api'
        }
    compile("io.swagger:swagger-annotations:$swaggerVersion")
        {
            exclude group: 'javax.ws.rs', module: 'jsr311-api'
        }

    testCompile(
            "junit:junit:$junitVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "io.dropwizard:dropwizard-testing:$dropwizardVersion",
            "io.dropwizard:dropwizard-client:$dropwizardVersion",
    )
}

jar {
    manifest {
        attributes "Implementation-Title": "Gradle Quickstart"
        attributes "Implementation-Version": version
        attributes "Main-Class": mainClassName
    }

    // remove the security files (from mail.jar / activation.jar) so that the jar will be executable.
    doFirst {
        from(configurations.runtime.resolve().collect { it.isDirectory() ? it : zipTree(it) }) {
            exclude 'META-INF/MANIFEST.MF'
            exclude 'META-INF/*.SF'
            exclude 'META-INF/*.DSA'
            exclude 'META-INF/*.RSA'
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

task stage {
    dependsOn assemble
    // Do not remove this task, it needs to be present for the deploy on Heroku.
}

task startAppDev(type: JavaExec, dependsOn: assemble) {
    main = '-jar'
    args = [jar.archivePath, 'server', 'src/main/resources/dev.yml']
}